# indicates which TSP solver should be used
#   1 = Nearest Neighbor
#   2 = Genetic solver
#   3 = Concorde solver
# int
tsp_solver: 3

# method that is used to plan the trolley positions
#   1 = drag the trolley if it is too far away from next room
#   2 = put rooms together in groups and calculate a corresponding trolley positions
# int
planning_method: 2

# max A* path length between two rooms that are assigned to the same clique, in [m]
# double
max_clique_path_length: 12.0

# the map may be downsampled during computations (e.g. of A* path lengths) in order to speed up the algorithm,
# range of the factor [0 < factor <= 1] 
# if set to 1 the map will have original size, if set to 0 the algorithm won't work
# double
map_downsampling_factor: 0.25

# boolean to tell the sequence planner if it should check the given room centers for accessibility from the starting position
# bool
check_accessibility_of_rooms: true

# boolean to tell the server if the map with the sequence drawn in should be returned
# bool
return_sequence_map: false

# displays the map with paths upon service call (only if return_sequence_map=true)
# bool
display_map: false
