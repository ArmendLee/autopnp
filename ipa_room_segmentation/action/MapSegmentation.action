# Map Segmentation action
# Provides interface to get the segmented map

# goal definition
sensor_msgs/Image input_map				# the action server need a map as a input image to segment it
float32 map_resolution					# the resolution of the map in [meter/cell]
geometry_msgs/Pose map_origin			# the origin of the map in [meter]
bool return_format_in_pixel   			# return room data (see below) in [pixel]
bool return_format_in_meter   			# return room data (see below) in [meter]
int32 room_segmentation_algorithm		# this variable selects the algorithm for room segmentation
											# 1 = morphological segmentation
											# 2 = distance segmentation
											# 3 = Voronoi segmentation
											# 4 = semantic segmentation
float32 robot_radius					# in [meter]; if this variable is set to a value greater than 0, the room centers are chosen at locations that are reachable from neighboring rooms (i.e. not inside the legs of a table surrounded by chairs)

---

# result definition
sensor_msgs/Image segmented_map			# the action server need a map as a input image to segment it, format 32SC1, room labels from 1 to N, room with label i -> access to room_information_in_pixel[i-1]
float32 map_resolution					# the resolution of the segmented map in [meter/cell]
geometry_msgs/Pose map_origin			# the origin of the segmented map in [meter]
# for the following data: value in pixel can be obtained when the value of [return_format_in_pixel] from goal definition is true
ipa_room_segmentation/RoomInformation[] room_information_in_pixel		# room data (min/max coordinates, center coordinates) measured in pixels
# for the following data: value in meter can be obtained when the value of [return_format_in_meter] from goal definition is true
ipa_room_segmentation/RoomInformation[] room_information_in_meter		# room data (min/max coordinates, center coordinates) measured in meters

---

#feedback definition