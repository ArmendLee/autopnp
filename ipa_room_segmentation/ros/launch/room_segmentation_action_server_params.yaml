# map sampling factor-> The chance of getting proper room configuration depends on this value ------> in [m]
# 1. choice of value is very important
# 2. slightly large value will give better sampled map
# 3. Extra large value will cost more computation time
# 4. large value is needed for big map
# 5. small value is needed for small map

map_sampling_factor_check: 1.5

# room area factor-> Set the limitation of area of the room -------> in [m]
# 1. choice of value is very important
# 2. smaller value increase the chance to get every room

room_area_factor_lower_limit_check: 3.5
room_area_factor_upper_limit_check: 50

#morphological segmentation: 0.8 - 47.0
#distance segmentation: 0.35 - 163.0 (lower limit is perfect, upper limit is discussable)
#Voronoi segmentation: 

#parameters for the voronoi segmentation that specify the neighborhood for critical Point extraction 
#and the distance between critical Points. 
voronoi_neighborhood_index: 270 #larger value sets a larger neighborhood --> int
voronoi_max_neighborhood_size: 142 #sets the maximal size for a neighborhood --> int
min_critical_Point_distance: 27.0 #minimal distance between two critical Points before one of it gets eliminated --> double

# this variable selects the algorithm for room segmentation
# 1 = morphological segmentation
# 2 = distance segmentation
# 3 = Voronoi segmentation
# 4 = semantic segmentation
# int
room_segmentation_algorithm: 3
